
from random import randint
from hashlib import pbkdf2_hmac
from datetime import datetime
import sqlite3
import sys
import os

def applyRole():
    
    if role == "Dispatcher":
        dispatcherActivity()
    if role == "Driver":
        driverActivity()
    
        
def dispatcherActivity():
    while True:
        printscreen('Dispatcher Actions')
        cmd= input("1.View Service Agreements")
        if cmd == '1':
            dispatcher_viewServiceAgreements()
            
def dispatcher_viewServiceAgreements():
    #Shows Service Agreements
    
    #Get and print service agreements
    
    #Select Service Agreement by SID
    #If User makes invalid choice, reject and reprompt
    #dispatcher_editServiceFulfillments(SID)
    
def dispatcher_editServiceFulfillments():
    #Shows Service Fulfillments; Drivers, Trucks, Containers, Locations and Dates
    
    #Print all Fulfilments for SID
    #Prompt to enter fullfillment
    #If User makes invalid choice, reject and reprompt
    
    #Prompt for Driver
    #If User makes invalid choice, reject and reprompt
    
    #If driver has an associated vehicle (owned vehicle)
    #Associate vehicle with driver
    #Else, prompt for truck
    #If User makes invalid choice, reject and reprompt
    
    #Provide PICKUP container automatically
    #Get Waste type, ID,
    #If None, provide Dummy Container (ID 0000)
    
    #Display list of Containers that are NOT at a location OR scheduled AND with waste type matching PICKUP container
    #Prompt for DROPOFF container
    #If User makes invalid choice, reject and reprompt
    
    #Prompt for Date
    #YYYY/MM/DD
    #If User makes invalid choice, reject and reprompt

def driverActivity():
    while True:
        printscreen('Driver Actions')
        cmd= input("1.View Driver Tours")
        if cmd == '1':
            driver_viewTours()    
            
def driverActivity():
    #Prompt for date range of tours
    #Get driver tours(location, local contact, waste type, container PICKUP ID, container DROPOFF ID) Pertaining to dates given
    #Display all relevant tours
    
    
